class Solution {
public:
    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {
       
        unordered_set <string> st(wordList.begin(), wordList.end());
        st.erase(beginWord);
        queue<pair<string, int>> q;
        q.push({beginWord, 1});
        while(!q.empty()){
            auto i= q.front();
            q.pop();
            string word= i.first;
            int levl=i.second;
            if(word==endWord){
                return levl;
            }
            for(int i=0;i<word.size();i++){
                char original = word[i];
                for(char ch='a'; ch<='z';ch++){
                    word[i]=ch;
                    if(st.find(word)!=st.end()){
                        q.push({word,levl+1});
                        st.erase(word);
                    }
                }
                word[i]=original;
            }
        } 
        return 0;
    }
};
