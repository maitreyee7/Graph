class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        vector<vector<int>> dist(n,vector<int>(n,1e9));
        
        for(int i=0;i<edges.size();i++){
            int u= edges[i][0], v= edges[i][1], wt= edges[i][2];
            dist[u][v]= wt;
            dist[v][u]=wt;
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(i==j){
                    dist[i][j]=0;
                }
                    if(dist[i][j]>distanceThreshold){
                       dist[i][j]=1e9; 
                    }
                
            }
            
        }
        for(int k=0;k<n;k++){
            for(int i=0;i<n;i++){
                for(int j=0;j<n;j++){
                    if(dist[i][k]+ dist[k][j] < dist[i][j] && (dist[i][k]+ dist[k][j]<=distanceThreshold)){
                        dist[i][j]= dist[i][k]+ dist[k][j];
                    }
                }
            }
        }
        int city= n+1;
        int tillnow=INT_MAX;
        int cnt;
        for(int i=0;i<n;i++){
                cnt=0;
            for(int j=0;j<n;j++){
                if(dist[i][j]!=0 && dist[i][j]!=1e9){
                    cnt++;
                }
            }
            if(cnt<=tillnow){
                city=i;
                tillnow=cnt;
            }
        }
        return city;

    }
};
