class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
       //vector<vector<int>> adj(numCourses);
        vector<int> adj[numCourses];
        for(int i=0;i<prerequisites.size();i++){
            int a= prerequisites[i][0];
            int b= prerequisites[i][1];
            if(a==b){
                return false;
            }
            adj[a].push_back(b);
        }
        int cnt=0;
        vector<int> indegree(numCourses,0);
        for(int i=0;i<numCourses;i++){
            for(auto it: adj[i]){
                indegree[it]++;
            }
        }
        queue<int> q;
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0){
                q.push(i);
            }
        }
        while(!q.empty()){
            int a= q.front();
            q.pop();
            cnt++;
            for(auto it: adj[a]){
                indegree[it]--;
                if(indegree[it]==0){
                    q.push(it);
                }
            }
        }
        if(cnt<numCourses-1){
            return false;
        }
        return true;
    }
};
