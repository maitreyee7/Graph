class Solution {
public:
    vector<vector<string>> findLadders(string beginWord, string endWord, vector<string>& wordList) {
         vector<vector<string>> ans;
         unordered_set<vector<string> > st(wordList.begin(), wordList.end());
         queue<vector<string>> q;
         q.push({beginWord});
         vector<string> used;
         used.push_back(beginWord);
         int level=0;
         while(!q.empty()){
           vector<string> vec= q.front();
            q.pop();
            if(vec.size()>level){
                level++;
                for(auto it: used){
                    st.erase(it);
                }
            }
            string word= vec.back();
            if(word==endWord){
                break;
            }
            for(int i=0;i<word.size();i++){
                char original= word[i];
                for(char ch= 'a';ch<='z';ch++){
                    if(st.find())
                }
            }

         }
    }
};
