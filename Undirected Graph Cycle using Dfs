class Solution {
  public:
    
    bool detectDFS(int node, vector<int> adj[], vector<int> &vis, int parent){
        vis[node]=1;
        for( auto it: adj[node]){
            if(!vis[it]){
                if(detectDFS(it,adj,vis,node)){
                    return true;
                }
            }
            else if(it!=parent){
                return true;
            }
        }
        return false;
    }
  
    
    // Function to detect cycle in an undirected graph.
    bool isCycle(int V, vector<int> adj[]) {
        vector<int> vis(V,0);
        
        for(int i=0;i<V;i++){
            if(!vis[i]){
            if(detectDFS(i,adj,vis,-1)){
                return true;
            }
           
        }
        }
        return false;
    }
};
