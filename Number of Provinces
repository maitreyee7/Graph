void dfs(int v,vector<int> adj[],  vector<int> &vis){
        vis[v]=1;
        for(auto it:adj[v]){
            if(!vis[it]){
                dfs(it,adj,vis);
            }
        }
    }

    
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n= isConnected.size();
        vector<int> adj[n+1];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j]==1){
                    adj[i+1].push_back(j+1);
                    adj[j+1].push_back(i+1);
                }
            }
        }
        int cnt=0;
        vector<int> vis(n+1,0);
        for(int i=1;i<=n;i++){
            if(!vis[i]){
                cnt++;
                dfs(i,adj,vis);
            }
        }
        return cnt;
    }
