class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> ans;
         vector<int> adj[numCourses];
        for(int i=0;i<prerequisites.size();i++){
            int a= prerequisites[i][0];
            int b= prerequisites[i][1];
            if(a==b){
                return ans;
            }
            adj[a].push_back(b);
        }
        int cnt=0;
        vector<int> indegree(numCourses,0);
        for(int i=0;i<numCourses;i++){
            for(auto it: adj[i]){
                indegree[it]++;
            }
        }
        queue<int> q;
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0){
                q.push(i);
            }
        }
        while(!q.empty()){
            int a= q.front();
            q.pop();
            ans.push_back(a);
            for(auto it: adj[a]){
                indegree[it]--;
                if(indegree[it]==0){
                    q.push(it);
                }
            }
        }
        if(ans.size()==numCourses){
            reverse(ans.begin(),ans.end());
            return ans;
        }
        return {};
    }
};
